@model EmployeeManagementSystem.Models.Employee

@{
    ViewBag.Title = "Edit";
}

@Html.Raw(TempData["UpdateMsg"])
@Html.Raw(TempData["SizeMsg"])
@Html.Raw(TempData["ExtensionMsg"])

<link href="~/Content/StyleSheet3.css" rel="stylesheet" />



@using (Html.BeginForm("Edit", "Home", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.id)
    <div class="container">
        <div class="title">Edit</div>
        <div class="user_details">
            <div class="input-box">
                @Html.LabelFor(model => model.name, htmlAttributes: new { @class = "control-label  details" })
                @Html.EditorFor(model => model.name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.name, "", new { @class = "text-danger" })
                <i class="fa-solid fa-circle-check"></i>
                <i class="fa-solid fa-circle-exclamation"></i>

            </div>
            <div class="input-box">
                @Html.LabelFor(model => model.designation, htmlAttributes: new { @class = "control-label details" })
                @Html.EditorFor(model => model.designation, new { htmlAttributes = new { @class = "form-control  fs-6" } })
                @Html.ValidationMessageFor(model => model.designation, "", new { @class = "text-danger" })
                <i class="fa-solid fa-circle-check"></i>
                <i class="fa-solid fa-circle-exclamation"></i>
            </div>
            <div class="input-box">
                @Html.LabelFor(model => model.email, htmlAttributes: new { @class = "control-label details" })
                @Html.EditorFor(model => model.email, new { htmlAttributes = new { @class = "form-control fs-6" } })
                @Html.ValidationMessageFor(model => model.email, "", new { @class = "text-danger" })
                <i class="fa-solid fa-circle-check"></i>
                <i class="fa-solid fa-circle-exclamation"></i>

            </div>
            <div class="input-box">
                @Html.LabelFor(model => model.address, htmlAttributes: new { @class = "control-label details" })
                @Html.EditorFor(model => model.address, new { htmlAttributes = new { @class = "form-control  fs-6" } })
                @Html.ValidationMessageFor(model => model.address, "", new { @class = "text-danger" })
                <i class="fa-solid fa-circle-check"></i>
                <i class="fa-solid fa-circle-exclamation"></i>

            </div>
            <div class="input-box">
                @Html.LabelFor(model => model.phone_number, htmlAttributes: new { @class = "control-label details" })
                @Html.EditorFor(model => model.phone_number, new { htmlAttributes = new { @class = "form-control  fs-6" } })
                @Html.ValidationMessageFor(model => model.phone_number, "", new { @class = "text-danger" })
                <i class="fa-solid fa-circle-check"></i>
                <i class="fa-solid fa-circle-exclamation"></i>
            </div>
            <div class="input-box">
                <img src="@Url.Content(Session["Image"].ToString())" height="80" width="80" />
                <br />
                <input type="file" name="ImageFile" />
            </div>
        </div>


        <div class="button mx-auto btn-lg" style="width: 200px;">
            <input type="submit" value="Save" />
        </div>

    </div>
}






<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
